{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/Feedback.module.css","components/Sections/Sections.module.css","components/Notification/Notification.module.css","components/Buttons/Buttons.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Sections/Sections.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Buttons","onIncrementFeetback","feedbackName","type","onClick","className","s","button","FeedbackOptions","options","list","map","key","item","Section","title","children","section","Statistics","good","neutral","bad","total","persantageFeedback","itemName","count","Notification","message","App","state","addFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","trunc","this","sum","Object","entries","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.389e0c27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2O0i4\",\"item\":\"Statistics_item__1HH2m\",\"itemName\":\"Statistics_itemName__Pocve\",\"count\":\"Statistics_count__1U04D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Feedback_item__PnDRi\",\"list\":\"Feedback_list__3DCk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Sections_title__YxzGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__15UBs\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Buttons.css';\n\nconst Buttons = ({ onIncrementFeetback, feedbackName }) => {\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => onIncrementFeetback(feedbackName)}\n        className={s.button}\n      >\n        {feedbackName}\n      </button>\n    </>\n  );\n};\n\nButtons.propTypes = {\n  feedbackName: PropTypes.string.isRequired,\n  onIncrementFeetback: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Buttons from '../Buttons/Buttons.jsx';\nimport s from './Feedback.module.css';\n\nexport default function FeedbackOptions({ options, onIncrementFeetback }) {\n  return (\n    <ul className={s.list}>\n      {options.map(([key]) => (\n        <li key={key} className={s.item}>\n          <Buttons\n            feedbackName={key}\n            onIncrementFeetback={onIncrementFeetback}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.array).isRequired,\n  onIncrementFeetback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Sections.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, persantageFeedback }) => {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>\n        <p className={s.itemName}> Good:</p>\n        <span className={s.count}>{good} </span>\n      </li>\n      <li className={s.item}>\n        <p className={s.itemName}>Neutral:</p>\n        <span className={s.count}>{neutral}</span>\n      </li>\n      <li className={s.item}>\n        <p className={s.itemName}>Bad:</p>\n        <span className={s.count}>{bad}</span>\n      </li>\n      <li className={s.item}>\n        <p className={s.itemName}>Total:</p>\n        <span className={s.count}>{total()}</span>\n      </li>\n      <li className={s.item}>\n        <p className={s.itemName}>Positive:</p>\n        <span className={s.count}>{persantageFeedback()} %</span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  persantageFeedback: PropTypes.func.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.message}>{message}</p>;\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions.jsx';\nimport Section from '../Sections/Sections.jsx';\nimport Statistics from '../Statistics/Statistics.jsx';\nimport Notification from '../Notification/Notification.jsx';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = feedbackName => {\n    this.setState(prevState => ({\n      [feedbackName]: prevState[feedbackName] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return Math.trunc((good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const sum = this.countTotalFeedback() === 0;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.entries(this.state)}\n            onIncrementFeetback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {sum && <Notification message=\"There is no feedback!\" />}\n          {!sum && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              persantageFeedback={this.countPositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}